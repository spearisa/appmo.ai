#!/usr/bin/env python3

import webbrowser
import time
import json
import os
from datetime import datetime

class DeepSiteClient:
    def __init__(self):
        self.base_url = 'https://enzostvs-deepsite.hf.space/projects/new'
        self.output_dir = 'generated-websites'
        
    def open_deepsite(self):
        """Open DeepSite in the default browser"""
        print(f"üöÄ Opening DeepSite: {self.base_url}")
        webbrowser.open(self.base_url)
        print("‚úÖ DeepSite opened in your browser!")
        print("\nüìù Instructions:")
        print("1. Type your prompt in the text area")
        print("2. Click the arrow button to generate")
        print("3. Use the screenshot tools to capture the result")
        
    def create_sample_prompts(self):
        """Create a file with sample prompts for DeepSite"""
        prompts = [
            "Create a modern landing page for a tech startup with a hero section, features, and contact form",
            "Build a portfolio website for a graphic designer with a gallery and about section",
            "Make a restaurant website with menu, location, and reservation form",
            "Create a blog website with a clean design and article layout",
            "Build an e-commerce product page with image gallery and purchase button",
            "Make a fitness app landing page with workout plans and testimonials",
            "Create a real estate website with property listings and contact form",
            "Build a photography portfolio with image grid and client testimonials",
            "Make a SaaS dashboard interface with charts and user management",
            "Create a travel blog with destination guides and booking integration"
        ]
        
        prompts_file = 'sample_prompts.txt'
        with open(prompts_file, 'w') as f:
            f.write("Sample Prompts for DeepSite\n")
            f.write("=" * 40 + "\n\n")
            for i, prompt in enumerate(prompts, 1):
                f.write(f"{i}. {prompt}\n\n")
        
        print(f"üìù Sample prompts saved to: {prompts_file}")
        return prompts_file
    
    def save_generated_html(self, html_content, project_name="project"):
        """Save generated HTML to a file"""
        if not os.path.exists(self.output_dir):
            os.makedirs(self.output_dir)
        
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"{project_name}_{timestamp}.html"
        filepath = os.path.join(self.output_dir, filename)
        
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        print(f"üíæ Generated HTML saved to: {filepath}")
        return filepath
    
    def create_html_template(self):
        """Create a basic HTML template for testing"""
        template = '''<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DeepSite Generated Project</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <div class="min-h-screen flex items-center justify-center">
        <div class="max-w-md w-full bg-white rounded-lg shadow-lg p-6">
            <h1 class="text-2xl font-bold text-gray-800 mb-4">Welcome to DeepSite!</h1>
            <p class="text-gray-600 mb-6">
                This is a sample project generated by DeepSite. 
                Use the prompts in sample_prompts.txt to create amazing websites!
            </p>
            <div class="space-y-4">
                <button class="w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600">
                    Get Started
                </button>
                <button class="w-full bg-gray-200 text-gray-800 py-2 px-4 rounded hover:bg-gray-300">
                    Learn More
                </button>
            </div>
        </div>
    </div>
</body>
</html>'''
        
        return self.save_generated_html(template, "sample_template")
    
    def run_demo(self):
        """Run a complete demo"""
        print("üéØ DeepSite Client Demo")
        print("=" * 30)
        
        # Create sample prompts
        prompts_file = self.create_sample_prompts()
        
        # Create a sample template
        template_file = self.create_html_template()
        
        # Open DeepSite
        self.open_deepsite()
        
        print(f"\nüìÅ Files created:")
        print(f"  - {prompts_file}")
        print(f"  - {template_file}")
        print(f"  - {self.output_dir}/ (for saving generated websites)")
        
        return {
            'prompts_file': prompts_file,
            'template_file': template_file,
            'output_dir': self.output_dir
        }

def main():
    client = DeepSiteClient()
    client.run_demo()

if __name__ == '__main__':
    main()
